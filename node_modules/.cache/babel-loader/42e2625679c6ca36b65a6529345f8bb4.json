{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aradh\\\\OneDrive\\\\Documents\\\\ReactFromBasic\\\\ReactFramework\\\\react_guide5\\\\src\\\\App.js\";\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport AddMovie from \"./components/AddMovie\";\nimport MoviesList from \"./components/MoviesList\";\nimport \"./App.css\";\n\nfunction App() {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const fetchMoviesHAndler = useCallback(async () => {\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const response = await fetch(\"https://react-http-9378f-default-rtdb.firebaseio.com/movies.json\");\n\n      if (!response.ok) {\n        throw new Error('Something went wrong!');\n      }\n\n      const data = await response.json();\n      const loadedMovies = [];\n\n      for (const key in data) {\n        loadedMovies.push({\n          id: key,\n          title: data[key]\n        });\n      }\n\n      const transformedMovies = data.results.map(movieData => {\n        return {\n          id: movieData.episode_id,\n          title: movieData.title,\n          openingText: movieData.opening_crawl,\n          releaseDate: movieData.release_date\n        };\n      });\n      setMovies(transformedMovies);\n    } catch (error) {\n      setError(error.message);\n    }\n\n    setIsLoading(false);\n  }, []);\n  useEffect(() => {\n    fetchMoviesHAndler();\n  }, [fetchMoviesHAndler]); // const dummyMovies = [\n  //   {\n  //     id: 1,\n  //     title: 'Some Dummy Movie',\n  //     openingText: 'This is the opening text of the movie',\n  //     releaseDate: '2021-05-18',\n  //   },\n  //   {\n  //     id: 2,\n  //     title: 'Some Dummy Movie 2',\n  //     openingText: 'This is the second opening text of the movie',\n  //     releaseDate: '2021-05-19',\n  //   },\n  // ];\n\n  async function addMovieHandler(movie) {\n    const response = await fetch(\"https://react-http-9378f-default-rtdb.firebaseio.com/movies.json\", {\n      method: 'POST',\n      body: JSON.stringify(movie),\n      headers: {\n        'Content-type': 'application/json'\n      }\n    });\n    const data = response.json();\n    console.log(data);\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(AddMovie, {\n    onAddMovie: addMovieHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: fetchMoviesHAndler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, \"Fetch Movies\")), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }, !isLoading && movies.length > 0 && /*#__PURE__*/React.createElement(MoviesList, {\n    movies: movies,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 45\n    }\n  }), !isLoading && movies.length === 0 && !error && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 57\n    }\n  }, \"Found No Movies\"), !isLoading && error && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 33\n    }\n  }, error), isLoading && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 23\n    }\n  }, \"Loading...\")));\n}\n\nexport default App;","map":{"version":3,"names":["React","useState","useEffect","useCallback","AddMovie","MoviesList","App","movies","setMovies","isLoading","setIsLoading","error","setError","fetchMoviesHAndler","response","fetch","ok","Error","data","json","loadedMovies","key","push","id","title","transformedMovies","results","map","movieData","episode_id","openingText","opening_crawl","releaseDate","release_date","message","addMovieHandler","movie","method","body","JSON","stringify","headers","console","log","length"],"sources":["C:/Users/aradh/OneDrive/Documents/ReactFromBasic/ReactFramework/react_guide5/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useCallback} from \"react\";\nimport AddMovie from \"./components/AddMovie\";\n\nimport MoviesList from \"./components/MoviesList\";\nimport \"./App.css\";\n\nfunction App() {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  \n  const fetchMoviesHAndler = useCallback(async() =>{\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(\"https://react-http-9378f-default-rtdb.firebaseio.com/movies.json\");\n      if(!response.ok){\n        throw new Error('Something went wrong!')\n      }\n      const data = await response.json();\n      const loadedMovies = [];\n      for(const key in data){\n        loadedMovies.push({\n          id : key,\n          title : data[key]\n        })\n      }\n      \n\n      const transformedMovies = data.results.map((movieData) => {\n        return {\n          id: movieData.episode_id,\n          title: movieData.title,\n          openingText: movieData.opening_crawl,\n          releaseDate: movieData.release_date,\n        };\n      });\n      setMovies(transformedMovies);\n      \n    } catch (error) {\n      setError(error.message)\n      \n    }\n    setIsLoading(false);\n  }, [])\n\n  useEffect(() => {\n    fetchMoviesHAndler();\n  }, [fetchMoviesHAndler])\n\n  // const dummyMovies = [\n  //   {\n  //     id: 1,\n  //     title: 'Some Dummy Movie',\n  //     openingText: 'This is the opening text of the movie',\n  //     releaseDate: '2021-05-18',\n  //   },\n  //   {\n  //     id: 2,\n  //     title: 'Some Dummy Movie 2',\n  //     openingText: 'This is the second opening text of the movie',\n  //     releaseDate: '2021-05-19',\n  //   },\n  // ];\n  async function addMovieHandler(movie){\n    const response = await fetch(\"https://react-http-9378f-default-rtdb.firebaseio.com/movies.json\", {\n      method: 'POST',\n      body : JSON.stringify(movie),\n      headers: {\n        'Content-type' : 'application/json'\n\n      }\n    })\n    const data = response.json();\n    console.log(data);\n  }\n\n  return (\n    <React.Fragment>\n      <section>\n        <AddMovie onAddMovie={addMovieHandler}/>\n      </section>\n      <section>\n        <button onClick={fetchMoviesHAndler}>Fetch Movies</button>\n      </section>\n      <section>\n        {!isLoading && movies.length > 0 && <MoviesList movies={movies} />}\n        {!isLoading && movies.length === 0 && !error && <p>Found No Movies</p>}\n        {!isLoading && error && <p>{error}</p>}\n        {isLoading && <p>Loading...</p>}\n      </section>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,WAArC,QAAuD,OAAvD;AACA,OAAOC,QAAP,MAAqB,uBAArB;AAEA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAO,WAAP;;AAEA,SAASC,GAAT,GAAe;EACb,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,EAAD,CAApC;EACA,MAAM,CAACQ,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,KAAD,CAA1C;EACA,MAAM,CAACU,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,IAAD,CAAlC;EAEA,MAAMY,kBAAkB,GAAGV,WAAW,CAAC,YAAU;IAC/CO,YAAY,CAAC,IAAD,CAAZ;IACAE,QAAQ,CAAC,IAAD,CAAR;;IACA,IAAI;MACF,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAAC,kEAAD,CAA5B;;MACA,IAAG,CAACD,QAAQ,CAACE,EAAb,EAAgB;QACd,MAAM,IAAIC,KAAJ,CAAU,uBAAV,CAAN;MACD;;MACD,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAAnB;MACA,MAAMC,YAAY,GAAG,EAArB;;MACA,KAAI,MAAMC,GAAV,IAAiBH,IAAjB,EAAsB;QACpBE,YAAY,CAACE,IAAb,CAAkB;UAChBC,EAAE,EAAGF,GADW;UAEhBG,KAAK,EAAGN,IAAI,CAACG,GAAD;QAFI,CAAlB;MAID;;MAGD,MAAMI,iBAAiB,GAAGP,IAAI,CAACQ,OAAL,CAAaC,GAAb,CAAkBC,SAAD,IAAe;QACxD,OAAO;UACLL,EAAE,EAAEK,SAAS,CAACC,UADT;UAELL,KAAK,EAAEI,SAAS,CAACJ,KAFZ;UAGLM,WAAW,EAAEF,SAAS,CAACG,aAHlB;UAILC,WAAW,EAAEJ,SAAS,CAACK;QAJlB,CAAP;MAMD,CAPyB,CAA1B;MAQAzB,SAAS,CAACiB,iBAAD,CAAT;IAED,CAzBD,CAyBE,OAAOd,KAAP,EAAc;MACdC,QAAQ,CAACD,KAAK,CAACuB,OAAP,CAAR;IAED;;IACDxB,YAAY,CAAC,KAAD,CAAZ;EACD,CAjCqC,EAiCnC,EAjCmC,CAAtC;EAmCAR,SAAS,CAAC,MAAM;IACdW,kBAAkB;EACnB,CAFQ,EAEN,CAACA,kBAAD,CAFM,CAAT,CAxCa,CA4Cb;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EACA,eAAesB,eAAf,CAA+BC,KAA/B,EAAqC;IACnC,MAAMtB,QAAQ,GAAG,MAAMC,KAAK,CAAC,kEAAD,EAAqE;MAC/FsB,MAAM,EAAE,MADuF;MAE/FC,IAAI,EAAGC,IAAI,CAACC,SAAL,CAAeJ,KAAf,CAFwF;MAG/FK,OAAO,EAAE;QACP,gBAAiB;MADV;IAHsF,CAArE,CAA5B;IAQA,MAAMvB,IAAI,GAAGJ,QAAQ,CAACK,IAAT,EAAb;IACAuB,OAAO,CAACC,GAAR,CAAYzB,IAAZ;EACD;;EAED,oBACE,oBAAC,KAAD,CAAO,QAAP;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE,oBAAC,QAAD;IAAU,UAAU,EAAEiB,eAAtB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADF,CADF,eAIE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE;IAAQ,OAAO,EAAEtB,kBAAjB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,kBADF,CAJF,eAOE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACG,CAACJ,SAAD,IAAcF,MAAM,CAACqC,MAAP,GAAgB,CAA9B,iBAAmC,oBAAC,UAAD;IAAY,MAAM,EAAErC,MAApB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADtC,EAEG,CAACE,SAAD,IAAcF,MAAM,CAACqC,MAAP,KAAkB,CAAhC,IAAqC,CAACjC,KAAtC,iBAA+C;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,qBAFlD,EAGG,CAACF,SAAD,IAAcE,KAAd,iBAAuB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAIA,KAAJ,CAH1B,EAIGF,SAAS,iBAAI;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAJhB,CAPF,CADF;AAgBD;;AAED,eAAeH,GAAf"},"metadata":{},"sourceType":"module"}